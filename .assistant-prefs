# Assistant Preference Configuration
# 이 파일은 대화 중 내가 따라야 할 사전 지침을 정의.
# 필요 시 키 값을 수정/추가하고 "simple commit go" 트리거 유지.
# 주석(#) 라인은 무시됨.

[PREFS_VERSION]
version=1

[BASIC]
# 1. 기본 대화 언어
language=ko
# 2. 설명 스타일: concise → 핵심만, 필요 시 추가 설명은 요청받을 때
explanation=concise

[REACT]
# 3. 과도한 useMemo / useCallback 남발 금지: 최소화 전략
react.memoization=minimal
# 허용 정책 설명:
# - 측정된 성능 문제, 비싼 계산, 참조 안정성(의존 라이브러리 필요) 상황에서만 사용
# - 사소한 렌더 최적화 목적 남발 금지

[GIT_AUTOCOMMIT]
# 4. 트리거 문구: 사용자가 이 정확한 문자열을 "단독 메시지" 로 보냈을 때만 자동 실행
#    -> 변경 파일 전체 add + commit + push 수행
#    절대! 이 트리거 없이 임의로 add/commit/push 하지 않는다 (일반 구현/수정 요청은 보고만)
#    사용자가 명시적으로 "simple commit go"(또는 alias) 를 보내지 않으면 push 금지, commit 도 금지
commit.trigger="simple commit go"
# 오타/대체 트리거(선택): "simpel commit go" (사용자가 잘못 입력한 패턴)
commit.trigger.aliases="simpel commit go"
# 커밋 브랜치 (기본 main)
commit.branch=main
# 자동 add 범위: all → 모든 변경 파일 추적
commit.auto_add_paths=all
# 자동 push 기본 비활성 (트리거 외에는 push 금지)
commit.auto_push=false
# 자동 commit 도 비활성 (트리거 외에는 commit 금지)
commit.auto_commit=false
# 트리거 시에만 commit/push 모두 허용
commit.commit_on_trigger=true
commit.push_on_trigger=true
# (선택) 특정 경로만: 예) src/**,apps/web/**
# commit.auto_add_paths=src/**

[COMMIT_MESSAGE]
# 5. 커밋 메시지 한글 작성
commit.message.lang=ko
# 형식: <type>: <subject>  (한 줄, 마침표 X, 72자 이내 권장)
commit.message.style=type(subject)
# 허용 타입 목록
commit.types=feat,fix,refactor,docs,chore,style,test
# 기본 타입 강제 (비워두면 자유) 예) chore
# commit.default_type=
# subject 대문자 시작 금지 여부 (true/false)
commit.subject.lowercase_start=true
# 최대 길이(헤더)
commit.header.max_length=72

[SAFETY_GUARDS]
# 빈 변경 사항에서 트리거 시 커밋/푸시 생략하고 알림
commit.skip_if_no_changes=true
# push 실패 시 사용자에게 오류 보고
commit.report_push_errors=true

[EXTENSIBILITY_NOTES]
# 필요 시 추가 가능한 키 예시:
# lint.run_before_commit=true
# test.run_before_commit=false
# release.auto_tag=false

[REFERENCE_EXAMPLES]
# 예시 커밋 메시지
# feat: 헤더 8bit 내비게이션 추가
# fix: 네비 포커스 이동 오류 수정
# refactor: TopBar 속성 단순화
# docs: README 사용법 보강
# chore: 패키지 버전 업데이트
# style: 버튼 여백 조정
# test: 날짜 유틸 단위 테스트 추가

[END]
